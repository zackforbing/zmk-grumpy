#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define APT 0
#define NUM 1
#define NAV 2
#define SYM 3
#define FUN 4

// &lt {
//     quick_tap_ms = <170>;
// };

&caps_word { continue-list = <UNDERSCORE MINUS BSPC LSHFT RSHFT>; };

/ {
    combos {
        compatible = "zmk,combos";

        left_enter {
            bindings = <&kp ENTER>;
            key-positions = <0 10 11>;
        };

        right_enter {
            bindings = <&kp ENTER>;
            key-positions = <7 15 14>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <2 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <1 11>;
        };

        hold_space {
            bindings = <&kp SPACE>;
            key-positions = <26 21>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <11 14>;
        };

        toggle_nav {
            bindings = <&tog 2>;
            key-positions = <9 1 11>;
            layers = <0 2>;
            require-prior-idle-ms = <350>;
        };

        jsdoc {
            bindings = <&jsdoc>;
            key-positions = <25 24>;
        };

        caps_lock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <11 10 14 15>;
        };

        screen_shot {
            bindings = <&kp LS(LG(N5))>;
            key-positions = <0 8>;
        };

        soft_off {
            bindings = <&soft_off>;
            key-positions = <0 7 26 27>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <8 18 17 25>;
        };

        bt_clear_all {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <0 7>;
        };

        reset {
            bindings = <&sys_reset>;
            key-positions = <8 17>;
        };

        globe {
            bindings = <&kp GLOBE>;
            key-positions = <26 18>;
        };

        toggle_win {
            bindings = <&tog 1>;
            key-positions = <8 0 7 17>;
        };

        screenshot_win {
            bindings = <&kp LS(LG(S))>;
            key-positions = <0 8>;
            layers = <1>;
        };

        force_quit_mac {
            bindings = <&kp LA(LG(ESCAPE))>;
            key-positions = <0 1 2>;
        };
    };

    behaviors {
        hml: HOMEROW_L_MODS {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_L_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick-tap-ms = <190>;
            flavor = "balanced";
            require-prior-idle-ms = <100>;
        };

        hsl: HOMEROW_L_SHIFT {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_L_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick-tap-ms = <190>;
            flavor = "balanced";
            require-prior-idle-ms = <0>;
        };

        com_scln: comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_SEMICOLON";
            bindings = <&kp COMMA>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        pd_cln: period_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "PERIOD_COLON";
            bindings = <&kp PERIOD>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hmr: HOMEROW_R_MODS {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_R_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick-tap-ms = <190>;
            flavor = "balanced";
            require-prior-idle-ms = <100>;
        };

        hsr: HOMEROW_R_SHIFT {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_R_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick-tap-ms = <190>;
            flavor = "balanced";
            require-prior-idle-ms = <0>;
        };

        bksp_del: bksp_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BKSP_DEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    macros {
        jsdoc: jsdoc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp FSLH &kp STAR &kp STAR &kp SPACE>;
            label = "JSDOC";
        };
    };

    //   ____________________________  ____________________________
    //  /       0  |  1  |  2  |  3  \/   4 |   5 |   6 |   7      \
// |  8  |  9  | 10  | 11  | 12  /\  13 |  14 |  15 |  16 | 17  |
    // | 19  | 19  | 20  | 21       /  \       22 |  23 |  24 | 25  |
    //                      \  26  /    \  27  /
    //                       ------      ------

    keymap {
        compatible = "zmk,keymap";

        aptmak {
            label = "APT";
            bindings = <
              &kp W        &kp F        &kp P         &kp B          &kp J       &kp L         &kp U        &kp Y
&hml LCTRL R  &hml LALT S  &hml LGUI T  &hsl LSHFT H  &hml RALT K     &hmr RALT X  &hsr RSHFT N  &hmr RGUI A  &hmr LALT I  &hmr RCTRL O
&lt NUM SQT   &kp C        &kp G        &kp D                                    &kp M         &com_scln    &pd_cln      &lt FUN ENTER
                                                      &lt NAV SPACE  &lt SYM E
            >;
        };

        numbers {
            label = "NUM";
            bindings = <
               &kp N9        &kp N8        &kp N7         &kp ASTERISK    &kp PLUS   &kp N7  &kp N8  &kp N9
&hml LCTRL N0  &hml LALT N6  &hml LGUI N5  &hsl LSHFT N4  &hml RALT SLASH  &kp MINUS  &kp N4  &kp N5  &kp N6  &kp DOT
&trans         &kp N3        &kp N2        &kp N1                                    &kp N1  &kp N2  &kp N3  &kp N0
                                                          &trans          &kp E
            >;
        };

        navigation {
            label = "NAV";
            bindings = <
           &kp INSERT      &kp UP          &kp BSPC          &kp C_VOL_DN  &kp C_VOL_UP  &kp BSPC  &kp DEL    &kp INSERT
&kp LCTRL  &hml LALT LEFT  &hml LGUI DOWN  &hsl LSHFT RIGHT  &kp C_MUTE    &kp LEFT      &kp DOWN  &kp UP     &kp RIGHT   &kp TAB
&trans     &kp HOME        &kp PG_DN       &kp END                                       &kp HOME  &kp PG_UP  &kp END     &trans
                                                             &trans        &trans
            >;
        };

        symbols {
            label = "SYM";
            bindings = <
          &kp GRAVE  &kp DQT   &kp RA(LS(SEMI))  &kp LBRC  &kp RBRC  &kp BACKSLASH  &kp PIPE      &kp LT
&kp EXCL  &kp AT     &kp HASH  &kp DOLLAR        &kp LPAR  &kp RPAR  &kp AMPERSAND  &kp ASTERISK  &kp PERCENT  &kp CARET
&trans    &kp TILDE  &kp SQT   &kp UNDERSCORE                        &kp MINUS      &kp PLUS      &kp EQUAL    &trans
                                                 &kp RBKT  &trans
            >;
        };

        function {
            label = "FUN";
            bindings = <
        &bootloader  &trans  &trans  &trans  &kp F12  &kp F7  &kp F8  &kp F9
&trans  &trans       &trans  &trans  &trans  &kp F11  &kp F4  &kp F5  &kp F6  &kp F10
&trans  &trans       &trans  &trans                   &kp F1  &kp F2  &kp F3  &trans
                                     &trans  &trans
            >;
        };
    };
};
